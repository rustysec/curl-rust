language: rust
services:
  - docker

matrix:
  include:
    - os: linux
      rust: stable
      env: TARGET=x86_64-unknown-linux-gnu DOCKER=linux64 NO_ADD=1
    - os: linux
      rust: stable
      env: TARGET=i686-unknown-linux-gnu DOCKER=linux32
    - os: linux
      rust: stable
      env: TARGET=x86_64-unknown-linux-musl DOCKER=musl
    - os: linux
      rust: stable
      env: TARGET=x86_64-pc-windows-gnu NO_RUN=1 DOCKER=mingw
    - os: linux
      rust: stable
      env: TARGET=x86_64-unknown-linux-gnu DOCKER=linux64-curl NO_ADD=1
    - os: osx
      rust: stable
      env: TARGET=x86_64-apple-darwin NO_ADD=1
      script: sh ci/run.sh
    - os: osx
      rust: stable
      install: true
      script: cargo build --features curl-sys/static-curl
    - os: osx
      rust: stable
      env: TARGET=i686-apple-darwin
      script: sh ci/run.sh
    - os: linux
      rust: beta
      env: TARGET=x86_64-unknown-linux-gnu DOCKER=linux64 NO_ADD=1
    - name: "master doc to gh-pages"
      rust: nightly
      install: true
      script: cargo doc --no-deps
      deploy:
        provider: script
        script: curl -LsSf https://git.io/fhJ8n | rustc - && (cd target/doc && ../../rust_out)
        skip_cleanup: true
        on:
          branch: master

install:
  - if [ -z "$NO_ADD" ]; then rustup target add $TARGET; fi

script:
  - curl --version
  - cargo generate-lockfile
  - mkdir .cargo target;
    docker build -t rust -f ci/Dockerfile-$DOCKER ci;
    docker run
     -w /src
     -v `pwd`:/src:ro
     -v `pwd`/target:/src/target
     -v `pwd`/ci/.cargo:/src/.cargo:ro
     -v `rustc --print sysroot`:/usr/local:ro
     -e TARGET=$TARGET
     -e NO_RUN=$NO_RUN
     -e CARGO_TARGET_DIR=/src/target
     -it rust
     sh ci/run.sh

notifications:
  email:
    on_success: never
